{"version":3,"file":"component---src-templates-comic-list-jsx-0db7f841ded469ea51d0.js","mappings":"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","sources":["webpack://SabrinaSS.com/./src/assets/vectors/Hamster.jsx","webpack://SabrinaSS.com/./src/components/ComicItem/styled.jsx","webpack://SabrinaSS.com/./src/components/ComicItem/index.jsx","webpack://SabrinaSS.com/./src/templates/comic-list.jsx"],"sourcesContent":["import React from \"react\"\n\nconst Hamster = (props) => (\n  <svg\n    width=\"175\"\n    height=\"250\"\n    version=\"1.1\"\n    viewBox=\"0 0 46.302 66.146\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <g transform=\"translate(-6.8818 -.40473)\">\n      <path\n        d=\"m12.418 15.087c-8.9885-22.734 11.188-9.6523 6.8349-3.4222\"\n        fill=\"#fa9c08\"\n        stroke=\"#995808\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\".79375\"\n      />\n      <path\n        d=\"m17.602 11.418c-7.9218 7.4332-6.3825-17.842 0 0z\"\n        fill=\"#faffff\"\n      />\n    </g>\n    <path\n      d=\"m7.9523 60.911c-4.8162 6.4413 8.1957 4.1727 7.3825 0.94934\"\n      fill=\"#e798d3\"\n      stroke=\"#995808\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\".79375\"\n    />\n    <g transform=\"translate(-6.8818 -.40473)\">\n      <path\n        d=\"m19.008 40.585c-3.7019 0.16944-4.7412-1.4098-6.0922-3.2599-19.914-37.325 42.434-48.639 37.458-2.3297 1.6941 38.369-7.7429 27.602-17.632 27.25-21 2.242-27.173 0.34664-19.826-24.92 1.351 1.6869 2.3944 3.4234 6.0922 3.2599z\"\n        fill=\"#fa9c08\"\n        stroke=\"#995808\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\".79375\"\n      />\n      <path\n        d=\"m32.742 62.245c21.028 4.3052 4.4057-18.484 3.0159-22.417 13.925-18.431-34.899-15.473-17.536 0.76182 0.32158 6.1646-19.485 27.244 14.52 21.655z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"m19.008 40.585c-3.712 0.1702-4.7412-1.4098-6.0922-3.2599-19.914-37.325 42.434-48.639 37.458-2.3296 1.6941 38.369-7.7429 27.602-17.632 27.25-21 2.242-27.173 0.34664-19.826-24.92 1.351 1.6869 2.3944 3.4234 6.0922 3.2599z\"\n        fill=\"none\"\n        stroke=\"#995808\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\".79375\"\n      />\n    </g>\n    <g transform=\"translate(0 2.1167)\">\n      <path\n        d=\"m13.288 21.834c-13.804 7.6553 1.4064 17.09 5.0999 7.7709 1.1486 8.6952 19.93 2.6661 7.3466-7.2428\"\n        fill=\"#fa9c08\"\n      />\n      <g strokeLinecap=\"round\">\n        <path\n          d=\"m8.8624 28.962c0.41897 3.155 6.2271 7.7842 9.9207 1.0403 1.1485 6.3215 11.274 3.0708 10.538-2.0071\"\n          fill=\"none\"\n          stroke=\"#fff\"\n          strokeWidth=\"1.5875\"\n          style={{ paintOrder: \"normal\" }}\n        />\n        <path\n          d=\"m13.683 22.231c-13.805 7.6553 1.4064 17.09 5.0999 7.7709 1.1486 8.6952 19.93 2.6661 7.3466-7.2428\"\n          fill=\"none\"\n          stroke=\"#995808\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\".79375\"\n        />\n        <ellipse\n          cx=\"19.932\"\n          cy=\"22.904\"\n          rx=\"4.4052\"\n          ry=\"2.8293\"\n          fill=\"#e798d3\"\n          fillRule=\"evenodd\"\n          stroke=\"#995808\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\".87378\"\n          style={{ paintOrder: \"markers fill stroke\" }}\n        />\n      </g>\n    </g>\n    <g transform=\"translate(-7.2342 -1.0922)\" fillRule=\"evenodd\">\n      <ellipse\n        cx=\"34.952\"\n        cy=\"18.756\"\n        rx=\"3.616\"\n        ry=\"4.4332\"\n        fill=\"#995808\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\".16893\"\n        style={{ paintOrder: \"markers fill stroke\" }}\n      />\n      <circle\n        cx=\"36.267\"\n        cy=\"17.429\"\n        r=\".79375\"\n        fill=\"#fff\"\n        style={{ paintOrder: \"markers fill stroke\" }}\n      />\n    </g>\n    <g transform=\"translate(-21.135 -2.9419)\" fillRule=\"evenodd\">\n      <ellipse\n        cx=\"34.952\"\n        cy=\"20.872\"\n        rx=\"3.616\"\n        ry=\"4.4332\"\n        fill=\"#995808\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\".16893\"\n        style={{ paintOrder: \"markers fill stroke\" }}\n      />\n      <circle\n        cx=\"36.267\"\n        cy=\"17.429\"\n        r=\".79375\"\n        fill=\"#fff\"\n        style={{ paintOrder: \"markers fill stroke\" }}\n      />\n    </g>\n    <g transform=\"translate(-9.5277 -.40473)\">\n      <path\n        d=\"m41.25 11.041c7.8571-24.669 18.825 4.3471 7.7035 3.6364\"\n        fill=\"#fa9c08\"\n        stroke=\"#995808\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\".79375\"\n      />\n      <path d=\"m43.644 11.82c6.0363-19.699 13.65 7.746 0 0z\" fill=\"#faffff\" />\n    </g>\n    <g\n      fill=\"#e798d3\"\n      stroke=\"#995808\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path\n        d=\"m30.33 61.683c-7.8145 4.3462 7.648 5.4203 5.5734 0.94691\"\n        strokeWidth=\".79375\"\n      />\n      <path\n        d=\"m32.881 45.138c-5.4395 2.9018-3.4974 10.514 2.9689 1.7539\"\n        strokeWidth=\".77046\"\n      />\n      <path\n        d=\"m6.3709 46.788c-0.9998 5.4005 6.6632 7.5366 2.5754-1.8713\"\n        strokeWidth=\".77046\"\n      />\n    </g>\n  </svg>\n)\n\nexport default Hamster\n","import styled from \"styled-components\"\nimport media from \"styled-media-query\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nexport const PostItemLink = styled(Link)`\n  display: flex;\n  text-decoration: none;\n  padding: 0 var(--48px);\n  transition: all 0.25s;\n\n  ${media.lessThan(\"medium\")`\n    padding: 0;\n  `}\n`\n\nexport const PostItemWrapper = styled.section`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 0 auto;\n  width: minmax(100%, 800px);\n\n  ${media.lessThan(\"large\")`\n    flex-direction: column;\n    padding: 2rem 1rem;\n  `}\n\n  ${media.lessThan(\"medium\")`\n    padding: 1rem 0.25rem;\n  `}\n`\n\nexport const PostItemImageFeatured = styled(GatsbyImage)`\n  color: var(--background);\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  font-size: 1.3rem;\n  font-weight: 700;\n`\n\nexport const PostItemHeader = styled.div`\n  width: 100%;\n  margin: 0 0 var(--16px);\n\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  justify-content: space-between;\n\n  ${media.lessThan(\"medium\")`\n    flex-direction: column;\n    align-items: flex-start;\n  `}\n`\n\nexport const PostItemDate = styled.time`\n  font-size: 1rem;\n  text-align: right;\n\n  ${media.lessThan(\"medium\")`\n    font-size: 0.75rem;\n  `}\n`\n\nexport const PostItemTitle = styled.h2`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  font-size: 2rem;\n  font-weight: 700;\n\n  span {\n    font-size: 1rem;\n    margin: 0 var(--8px);\n  }\n\n  ${media.lessThan(\"medium\")`\n    font-size: 1.25rem;\n\n    span {\n      font-size: 0.5rem;\n    }\n  `}\n`\n\nexport const PostItemTags = styled.div`\n  margin: 0.5rem 0;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport {\n  PostItemLink,\n  PostItemWrapper,\n  PostItemHeader,\n  PostItemTitle,\n  PostItemDate,\n  PostItemImageFeatured,\n} from \"./styled\"\n\nconst ComicItem = ({\n  slug,\n  date,\n  title,\n  number,\n  transcription,\n  featuredImage,\n}) => (\n  <PostItemLink to={slug}>\n    <PostItemWrapper>\n      <PostItemHeader>\n        <PostItemTitle>\n          #{number.toString().padStart(3, \"0\")} <span>●</span> {title}\n        </PostItemTitle>\n        <PostItemDate>{date}</PostItemDate>\n      </PostItemHeader>\n      {featuredImage && (\n        <PostItemImageFeatured\n          image={featuredImage.childImageSharp.gatsbyImageData}\n          title={transcription}\n          alt=\"\"\n        />\n      )}\n    </PostItemWrapper>\n  </PostItemLink>\n)\n\nComicItem.propTypes = {\n  slug: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  date: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  transcription: PropTypes.string.isRequired,\n}\n\nexport default ComicItem\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Hamster from \"assets/vectors/Hamster\"\n\nimport Strings from \"components/strings\"\nimport Blueprint from \"components/Blueprint\"\nimport Seo from \"components/seo\"\nimport ComicItem from \"components/ComicItem\"\nimport NavigationPage from \"components/NavigationPage\"\nimport ListsPages, {\n  ArticleComicNavigator,\n  SeparatorList,\n} from \"components/ListsPages\"\n\nconst titlePage = \"Tirinhas\"\nconst descriptionPage = \"Tirinhas sobre a vida de trabalhadores de tecnologia\"\nconst thumbnailPage = \"/figures/thumbnail_comics.jpg\"\n\nconst ComicList = (props) => {\n  const comicsList = props.data.allMarkdownRemark.edges,\n    { currentPage, prevPage, nextPage, numPages } = props.pageContext,\n    isFirst = currentPage === 1,\n    isLast = currentPage === numPages\n\n  return (\n    <Blueprint content title={titlePage} description={descriptionPage}>\n      <ListsPages Navigator={ArticleComicNavigator}>\n        <h1 className=\"comics\">{Strings.comics.allComics}</h1>\n        {comicsList.map(\n          (\n            {\n              node: {\n                frontmatter: {\n                  date,\n                  title,\n                  transcription,\n                  number,\n                  featuredImage,\n                  comicImage,\n                },\n                fields: { slug },\n              },\n            },\n            index\n          ) => (\n            <span key={index}>\n              <ComicItem\n                slug={slug}\n                number={number}\n                date={date}\n                title={title}\n                transcription={transcription}\n                featuredImage={featuredImage || comicImage}\n              />\n              <SeparatorList>\n                <Hamster />\n              </SeparatorList>\n            </span>\n          )\n        )}\n        <NavigationPage\n          isFirst={isFirst}\n          isLast={isLast}\n          currentPage={currentPage}\n          numPages={numPages}\n          prevPage={prevPage}\n          nextPage={nextPage}\n        />\n      </ListsPages>\n    </Blueprint>\n  )\n}\n\nexport const query = graphql`\n  query ComicsListNew($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n      filter: {\n        frontmatter: { published: { ne: false }, category: { eq: \"Comic\" } }\n      }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date(locale: \"pt_br\", formatString: \"DD [de] MMMM [de] YYYY\")\n            title\n            category\n            transcription\n            number\n            tags\n            coverImage\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData(\n                  width: 900\n                  layout: CONSTRAINED\n                  placeholder: BLURRED\n                )\n              }\n            }\n            comicImage {\n              childImageSharp {\n                gatsbyImageData(\n                  width: 600\n                  layout: CONSTRAINED\n                  placeholder: BLURRED\n                )\n              }\n            }\n          }\n          timeToRead\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default ComicList\n\nexport const Head = ({ location }) => (\n  <Seo\n    location={location}\n    image={thumbnailPage}\n    imagenWidth={1200}\n    imageHeight={628}\n    title={titlePage}\n    description={descriptionPage}\n  />\n)\n\n"],"names":["props","React","Object","assign","width","height","version","viewBox","xmlns","transform","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","style","paintOrder","cx","cy","rx","ry","fillRule","r","PostItemLink","styled","Link","withConfig","displayName","componentId","media","lessThan","PostItemWrapper","section","PostItemImageFeatured","GatsbyImage","PostItemHeader","div","PostItemDate","time","PostItemTitle","h2","_ref","slug","date","title","number","transcription","featuredImage","to","toString","padStart","image","childImageSharp","gatsbyImageData","alt","titlePage","descriptionPage","comicsList","data","allMarkdownRemark","edges","currentPage","prevPage","nextPage","numPages","pageContext","isFirst","isLast","Blueprint","content","description","ListsPages","Navigator","ArticleComicNavigator","className","Strings","comics","allComics","map","index","node","frontmatter","comicImage","fields","key","ComicItem","SeparatorList","Hamster","NavigationPage","Head","_ref2","location","Seo","imagenWidth","imageHeight"],"sourceRoot":""}