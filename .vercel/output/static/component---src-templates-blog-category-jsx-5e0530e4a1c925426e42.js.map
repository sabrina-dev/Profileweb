{"version":3,"file":"component---src-templates-blog-category-jsx-5e0530e4a1c925426e42.js","mappings":"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","sources":["webpack://SabrinaSS.com/./src/components/Badge/styled.jsx","webpack://SabrinaSS.com/./src/components/Badge/index.jsx","webpack://SabrinaSS.com/./src/components/ArticleItem/styled.jsx","webpack://SabrinaSS.com/./src/components/ArticleItem/index.jsx","webpack://SabrinaSS.com/./src/templates/blog-category.jsx"],"sourcesContent":["import styled from \"styled-components\"\n\nexport const Text = styled.p`\n  padding: 0.5rem 0.5rem 0.5rem 0;\n  margin: 0.2rem 0.2rem 0.2rem 0;\n  border-radius: 0.25rem;\n\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  font-weight: 700;\n  color: var(--background);\n  background-color: ${({ skill }) =>\n    skill ? \"var(--badgeSkill)\" : \"var(--highlight)\"};\n\n  span {\n    font-weight: 500;\n    font-size: 0.8rem;\n  }\n\n  &:before {\n    content: \"\";\n    display: block;\n    height: var(--8px);\n    width: var(--8px);\n    margin: 0 0.5rem;\n\n    background: var(--background);\n    border: 2px solid var(--shadow-colors);\n    border-radius: 50%;\n  }\n`\n","import React from \"react\"\n\nimport { Text } from \"./styled\"\n\nconst Badge = ({ children, ...rest }) => <Text {...rest}>{children}</Text>\n\nexport default Badge\n","import styled, { css } from \"styled-components\"\nimport media from \"styled-media-query\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nexport const ArticleItemLink = styled(Link)`\n  display: flex;\n  text-decoration: none;\n  border-bottom: 2px solid var(--shadow-colors);\n`\n\nexport const ArticleItemWrapper = styled.article`\n  align-items: center;\n  display: flex;\n  padding: var(--32px);\n  gap: var(--24px);\n  width: 100%;\n\n  ${media.lessThan(\"medium\")`\n    align-items: flex-start;\n    flex-direction: column;\n    padding: var(--32px) var(--16px);\n    gap: 0;\n  `}\n`\n\nconst imageFormat = css`\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n\n  border-radius: 50%;\n  display: flex;\n  font-size: 1.3rem;\n  font-weight: 700;\n  height: 120px;\n  width: 120px;\n  background-position: center;\n  background-color: var(--background-card);\n  box-shadow: 0 0 4px 1px var(--shadow-colors),\n    2px 2px 4px 1px var(--shadow-colors);\n  filter: saturate(0) brightness(1.15);\n  transform: rotate(10deg);\n  transition: 0.25s ease-in-out;\n\n  ${media.lessThan(\"medium\")`\n    font-size: 1rem;\n    min-height: auto;\n    min-width: auto;\n    padding: .2rem .5rem;\n    margin-bottom: var(--32px);\n    align-self: center;\n  `}\n\n  ${ArticleItemLink}:hover & {\n    filter: saturate(125%);\n    transform: none;\n  }\n`\n\nexport const ArticleItemImageFeatured = styled(GatsbyImage)`\n  ${imageFormat}\n`\n\nexport const ArticleItemCoverImage = styled.div`\n  ${imageFormat}\n`\n\nexport const ArticleItemTag = styled.div`\n  align-items: center;\n  background-color: ${({ background }) =>\n    background ? background : \"var(--highlight)\"};\n  border-radius: 50%;\n  color: var(--background);\n  display: flex;\n  font-size: 1.3rem;\n  font-weight: 700;\n  justify-content: center;\n  min-height: 120px;\n  min-width: 120px;\n`\n\nexport const ArticleItemInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${media.lessThan(\"medium\")`\n    margin: 0;\n  `}\n`\n\nexport const ArticleItemDate = styled.time`\n  font-size: 0.9rem;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  & span {\n    font-size: 0.5rem;\n    margin: 0 0.25rem;\n  }\n`\n\nexport const ArticleItemTitle = styled.h2`\n  font-size: 1.6rem;\n  font-weight: 700;\n  margin: 0.2rem 0 0.5rem;\n  vertical-align: middle;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  ${media.lessThan(\"medium\")`\n    margin-top: var(--8px);\n    margin-bottom: var(--8px);\n    font-size: 1.25rem;\n    flex-direction: column;\n    align-items: flex-start;\n  `}\n`\n\nexport const ArticleItemCategory = styled.span`\n  margin: 0 var(--8px) 0 0;\n  padding: var(--4px) var(--8px);\n  font-size: 0.75rem;\n  font-weight: 700;\n  color: var(--background);\n  background-color: var(--highlight);\n  border-radius: 15px;\n  text-transform: uppercase;\n  opacity: 0.8;\n  transition: 0.25s ease-in-out;\n\n  ${ArticleItemLink}:hover & {\n    opacity: 1;\n  }\n\n  ${media.lessThan(\"medium\")`\n    margin-bottom: var(--8px);\n  `}\n`\n\nexport const ArticleItemDescription = styled.p`\n  font-size: 1.2rem;\n  font-weight: 300;\n  line-height: 120%;\n\n  ${media.lessThan(\"medium\")`\n    font-size: 1rem;\n  `}\n`\n\nexport const ArticleItemTags = styled.div`\n  margin: var(--8px) 0;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  justify-content: flex-start;\n  opacity: 0.8;\n  transition: 0.25s ease-in-out;\n  gap: var(--2px);\n\n  ${ArticleItemLink}:hover & {\n    opacity: 1;\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Badge from \"components/Badge\"\n\nimport {\n  ArticleItemLink,\n  ArticleItemWrapper,\n  ArticleItemImageFeatured,\n  ArticleItemCoverImage,\n  ArticleItemTag,\n  ArticleItemInfo,\n  ArticleItemDate,\n  ArticleItemTitle,\n  ArticleItemCategory,\n  ArticleItemDescription,\n  ArticleItemTags,\n} from \"./styled\"\n\nconst ArticleItem = ({\n  slug,\n  date,\n  timeToRead,\n  title,\n  description,\n  tags,\n  featuredImage,\n  coverImage,\n  category,\n}) => (\n  <ArticleItemLink to={slug}>\n    <ArticleItemWrapper>\n      {featuredImage && (\n        <ArticleItemImageFeatured\n          image={featuredImage.childImageSharp.gatsbyImageData}\n          alt=\"\"\n        />\n      )}\n      {!featuredImage && coverImage && (\n        <ArticleItemCoverImage\n          style={{\n            backgroundImage: `url(${coverImage})`,\n            backgroundSize: category === \"Comic\" ? \"auto 150px\" : \"cover\",\n          }}\n        />\n      )}\n      {!featuredImage && !coverImage && (\n        <ArticleItemTag>{category}</ArticleItemTag>\n      )}\n      <ArticleItemInfo>\n        <ArticleItemDate>\n          {date} <span>‚óè</span> {timeToRead} min de leitura\n        </ArticleItemDate>\n        <ArticleItemTitle>\n          {category && <ArticleItemCategory>{category}</ArticleItemCategory>}\n          {title}\n        </ArticleItemTitle>\n        <ArticleItemDescription>{description}</ArticleItemDescription>\n        {tags && (\n          <ArticleItemTags>\n            {tags.map((tag, index) => (\n              <Badge key={index}>{tag}</Badge>\n            ))}\n          </ArticleItemTags>\n        )}\n      </ArticleItemInfo>\n    </ArticleItemWrapper>\n  </ArticleItemLink>\n)\n\nArticleItem.propTypes = {\n  slug: PropTypes.string.isRequired,\n  background: PropTypes.string,\n  category: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  tags: PropTypes.array.isRequired,\n  img: PropTypes.string,\n}\n\nexport default ArticleItem\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Strings from \"components/strings\"\nimport Blueprint from \"components/Blueprint\"\nimport Seo from \"components/seo\"\nimport ArticleItem from \"components/ArticleItem\"\nimport NavigationPage from \"components/NavigationPage\"\n\nimport ListsPages, { ArticleCategoryNavigatior } from \"components/ListsPages\"\n\nconst thumbnailPage = \"/figures/thumbnail_posts.jpg\"\n\nconst BlogCategory = ({ data, pageContext }) => {\n  const postList = data.allMarkdownRemark.edges\n  const { currentPage, prevPage, nextPage, numPages, categories, category } =\n    pageContext\n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n  const titlePage = `Artigos sobre ${category}`\n  const descriptionPage = `Artigos da categoria ${category}`\n\n  const ArticleNavigatior = () => (\n    <ArticleCategoryNavigatior categories={categories} />\n  )\n\n  return (\n    <Blueprint\n      content\n      title={titlePage}\n      description={descriptionPage}\n      openGraphImage={thumbnailPage}\n    >\n      <ListsPages Navigator={ArticleNavigatior}>\n        <h1>\n          {Strings.posts.category}: <strong>{category}</strong>\n        </h1>\n        {postList.map(\n          ({\n            node: {\n              frontmatter: {\n                date,\n                title,\n                category,\n                description,\n                tags,\n                coverImage,\n                featuredImage,\n              },\n              timeToRead,\n              fields: { slug },\n            },\n          }) => (\n            <ArticleItem\n              key={slug}\n              slug={slug}\n              category={category}\n              date={date}\n              timeToRead={timeToRead}\n              title={title}\n              description={description}\n              tags={tags}\n              coverImage={coverImage}\n              featuredImage={featuredImage}\n            />\n          )\n        )}\n        <NavigationPage\n          isFirst={isFirst}\n          isLast={isLast}\n          currentPage={currentPage}\n          numPages={numPages}\n          prevPage={prevPage}\n          nextPage={nextPage}\n        />\n      </ListsPages>\n    </Blueprint>\n  )\n}\n\nexport const query = graphql`\n  query PostsCaterory($skip: Int!, $limit: Int!, $category: String!) {\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n      filter: {\n        frontmatter: { published: { ne: false }, category: { eq: $category } }\n      }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date(locale: \"pt_br\", formatString: \"DD [de] MMMM [de] YYYY\")\n            title\n            category\n            description\n            tags\n            coverImage\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData(\n                  width: 120\n                  height: 120\n                  layout: CONSTRAINED\n                  placeholder: BLURRED\n                )\n              }\n            }\n          }\n          timeToRead\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default BlogCategory\n\nexport const Head = ({ location, pageContext }) => {\n  const { category } = pageContext\n  const titlePage = `Artigos sobre ${category}`\n  const descriptionPage = `Artigos da categoria ${category}`\n\n  return (\n    <Seo location={location}\n      image={thumbnailPage}\n      imagenWidth={1200}\n      imageHeight={628}\n      title={titlePage}\n      description={descriptionPage}\n    />\n  )\n}\n"],"names":["Text","styled","p","withConfig","displayName","componentId","_ref","skill","children","rest","React","ArticleItemLink","Link","ArticleItemWrapper","article","media","lessThan","imageFormat","css","ArticleItemImageFeatured","GatsbyImage","ArticleItemCoverImage","div","ArticleItemTag","background","ArticleItemInfo","ArticleItemDate","time","ArticleItemTitle","h2","ArticleItemCategory","span","ArticleItemDescription","ArticleItemTags","slug","date","timeToRead","title","description","tags","featuredImage","coverImage","category","to","image","childImageSharp","gatsbyImageData","alt","style","backgroundImage","backgroundSize","map","tag","index","Badge","key","thumbnailPage","data","pageContext","postList","allMarkdownRemark","edges","currentPage","prevPage","nextPage","numPages","categories","isFirst","isLast","titlePage","descriptionPage","Blueprint","content","openGraphImage","ListsPages","Navigator","ArticleNavigatior","ArticleCategoryNavigatior","Strings","posts","_ref2","node","frontmatter","fields","ArticleItem","NavigationPage","Head","_ref3","location","Seo","imagenWidth","imageHeight"],"sourceRoot":""}